<?php


namespace Recon\Tests\ModelTests;

use Illuminate\Database\Eloquent\Model;
use Illuminate\Http\Client\Request;
use Illuminate\Support\Facades\Http;
use Illuminate\Support\Str;
use Recon\Api\Api;
use Recon\Helpers\SchemaDefinition;
use Recon\Models\ReconItem;
use Recon\Tests\BaseTest;
use Recon\Tests\Models\TestModelItem;
use Recon\Tests\Models\TestModelUser;

class SchemaCastingTest extends BaseTest
{
    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        config([
            'recon' => [
                'database' => '::database::',
            ],
        ]);
    }

    public function testSchemaCasting()
    {
        $test = new class extends Model {
            use ReconItem;

            protected function define(SchemaDefinition $definition) {
                $definition->boolean('::boolean::');
                $definition->int('::int::');
                $definition->long('::long::');
                $definition->double('::double::');
                $definition->float('::float::');
                $definition->string('::string::');
                $definition->category('::category::');
            }
        };

        $longCarbon = now();

        $test->forceFill([
            '::boolean::' => 1,
            '::int::' => '45',
            '::long::' => $longCarbon,
            '::double::' => 1234.432,
            '::float::' => '432.43',
            '::string::' => 34,
            '::category::' => 'red',
        ]);

        $json = $test->toReconJson();

        $this->assertSame([
            '::boolean::' => true,
            '::int::' => 45,
            '::long::' => $longCarbon->timestamp,
            '::double::' => 1234.432,
            '::float::' => 432.43,
            '::string::' => '34',
            '::category::' => 'red',
        ], $json);
    }
}
